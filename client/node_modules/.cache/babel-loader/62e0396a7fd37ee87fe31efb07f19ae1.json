{"ast":null,"code":"var _jsxFileName = \"/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js\";\n//feature yet to be implement:\n//1. disable submit button when title is not filled.\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //import Checkout from './Checkout';\n//import AddressForm from './AddressForm';\n//import { Toolbar } from '@material-ui/core';\n//text fill\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'; //toggle button\n//import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n//import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n//import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n//import FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core'; //import { breakpoints } from '@material-ui/system';\n//public or private\n\nimport CreatePublic from './CreatePublic'; //switch \n\nimport Switch from '@material-ui/core/Switch'; //import FormGroup from '@material-ui/core/FormGroup';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import FormControl from '@material-ui/core/FormControl';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 660,\n    width: 500\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  },\n  forms: {\n    display: 'centre',\n    alignItems: 'centre',\n    justifyContent: 'centre'\n  }\n}));\n\nconst handleNameChange = e => {\n  console.log(`Typed => ${e.target.value}`);\n  setName(e.target.value);\n};\n\nconst handleTitleChange = e => {\n  console.log(`Typed => ${e.target.value}`);\n  setTitle(e.target.value);\n};\n\nconst [spacing, setSpacing] = React.useState(2);\nconst classes = useStyles(); //toggle button\n\nconst [publicstatus, setPublic] = React.useState(true);\n\nconst handleToggle = () => {\n  setPublic(!publicstatus);\n};\n\nclass CreateCapsule extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: '',\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      this.getBlogPost();\n    };\n\n    this.getBlogPost = () => {\n      axios.get('/api').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been received!!');\n      }).catch(() => {\n        alert('Error retrieving data!!!');\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      const payload = {\n        title: this.state.title,\n        body: this.state.body\n      };\n      axios({\n        url: '/api/save',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBlogPost();\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      ;\n    };\n\n    this.resetUserInputs = () => {\n      this.setState({\n        title: '',\n        body: ''\n      });\n    };\n\n    this.displayBlogPost = posts => {\n      if (!posts.length) return null;\n      return posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-post__display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this));\n    };\n  }\n\n  render() {\n    console.log('State: ', this.state); //JSX\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: spacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                gutterBottom: true,\n                children: \"Create Your Time Capsule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.forms,\n                noValidate: true,\n                autoComplete: \"off\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Your name?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      id: \"title\",\n                      name: \"title\",\n                      label: \"requiried\",\n                      value: name,\n                      onChange: handleNameChange,\n                      fullWidth: true,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Title: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      id: \"title\",\n                      name: \"title\",\n                      label: \"requiried\",\n                      value: title,\n                      onChange: handleTitleChange,\n                      fullWidth: true,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: classes.input,\n                      id: \"contained-button-file\",\n                      multiple: true,\n                      type: \"file\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"contained-button-file\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        component: \"span\",\n                        children: \"Click here to upload files\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      multiline: true,\n                      rows: 5,\n                      id: \"txtmsg\",\n                      name: \"Input txt\",\n                      label: \"Write your text here!\",\n                      fullWidth: true,\n                      defaultValue: \"I'm writing to you, from the past.\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 50\n                      }, this),\n                      color: \"secondary\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                alignItems: \"flex-end\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: \"Email for notification: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: \"Opening Time:  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    className: classes.container,\n                    noValidate: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"opentime\",\n                      type: \"datetime-local\",\n                      defaultValue: \"2021-05-24T10:30\" //can set it to current time?\n                      ,\n                      className: classes.textField,\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                    value: publicstatus,\n                    exclusive: true,\n                    onChange: handleToggle,\n                    \"aria-label\": \"text alignment\",\n                    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                      value: true,\n                      children: \"Public\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                      value: false,\n                      children: \"Private\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: publicstatus ? /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(CreatePublic, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          value: \"discard\",\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 70\n                          }, this),\n                          label: \"Discard After Read: \",\n                          labelPlacement: \"start\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          value: \"selfset\",\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 292,\n                            columnNumber: 70\n                          }, this),\n                          label: \"Self-Set Key: \",\n                          labelPlacement: \"start\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          name: \"selfsetkey\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          value: \"isnotyetmsg\",\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 70\n                          }, this),\n                          label: \"Not yet message: \",\n                          labelPlacement: \"start\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          multiline: true,\n                          fullWidth: true,\n                          rows: 5,\n                          name: \"notyetmsg\",\n                          defaultValue: \"Not yet. Come back later!\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this)\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CreateCapsule;","map":{"version":3,"sources":["/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js"],"names":["React","useState","axios","makeStyles","Grid","Paper","TextField","Button","KeyboardArrowRightIcon","ToggleButton","ToggleButtonGroup","CssBaseline","Typography","CreatePublic","Switch","FormControlLabel","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","input","display","forms","alignItems","justifyContent","handleNameChange","e","console","log","target","value","setName","handleTitleChange","setTitle","setSpacing","classes","publicstatus","setPublic","handleToggle","CreateCapsule","Component","state","title","body","posts","componentDidMount","getBlogPost","get","then","response","data","setState","catch","alert","handleChange","name","submit","event","preventDefault","payload","url","method","resetUserInputs","displayBlogPost","length","map","post","index","render","container","textField","shrink"],"mappings":"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","sourcesContent":["//feature yet to be implement:\n//1. disable submit button when title is not filled.\n\nimport React, { useState} from 'react' ;\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n//import Checkout from './Checkout';\n//import AddressForm from './AddressForm';\n//import { Toolbar } from '@material-ui/core';\n\n//text fill\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\n//toggle button\n//import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n//import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n//import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n//import FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core';\n//import { breakpoints } from '@material-ui/system';\n\n//public or private\nimport CreatePublic from './CreatePublic';\n\n//switch \nimport Switch from '@material-ui/core/Switch';\n//import FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n//import FormControl from '@material-ui/core/FormControl';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 660,\n        width: 500,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    input: {\n        display: 'none',\n    },\n    forms: {\n        display: 'centre',\n        alignItems: 'centre',\n        justifyContent: 'centre',\n\n    }\n}));\n\nconst handleNameChange = e => {\n    console.log(`Typed => ${e.target.value}`);\n    setName(e.target.value);\n};\n\nconst handleTitleChange = e => {\n    console.log(`Typed => ${e.target.value}`);\n    setTitle(e.target.value);\n};\n\nconst [spacing, setSpacing] = React.useState(2);\nconst classes = useStyles();\n\n//toggle button\nconst [publicstatus, setPublic] = React.useState(true);\n\nconst handleToggle = () => {\n    setPublic(!publicstatus);\n};\n\nclass CreateCapsule extends React.Component {\n    \n    state = {\n      title: '',\n      body: '',\n      posts: []\n    };\n  \n    componentDidMount = () => {\n      this.getBlogPost();\n    };\n  \n    getBlogPost = () => {\n      axios.get('/api')\n        .then((response) => {\n          const data = response.data;\n          this.setState({ posts: data });\n          console.log('Data has been received!!');\n        })\n        .catch(() => {\n          alert('Error retrieving data!!!');\n        });\n    }\n\n    handleChange = ({ target }) => {\n      const { name, value } = target;\n      this.setState({ [name]: value });\n    };\n  \n    submit = (event) => {\n      event.preventDefault();\n  \n      const payload = {\n        title: this.state.title,\n        body: this.state.body\n      };\n  \n      axios({\n        url: '/api/save',\n        method: 'POST',\n        data: payload\n      })\n        .then(() => {\n          console.log('Data has been sent to the server');\n          this.resetUserInputs();\n          this.getBlogPost();\n        })\n        .catch(() => {\n          console.log('Internal server error');\n        });;\n    };\n  \n    resetUserInputs = () => {\n      this.setState({\n        title: '',\n        body: ''\n      });\n    };\n  \n    displayBlogPost = (posts) => {\n  \n      if (!posts.length) return null;\n  \n  \n      return posts.map((post, index) => (\n        <div key={index} className=\"blog-post__display\">\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </div>\n      ));\n    };\n  \n    render() {\n  \n      console.log('State: ', this.state);\n  \n      //JSX\n      return (\n        <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={spacing}>\n                    <Grid key={0} item>\n                        <Paper className={classes.paper}>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Create Your Time Capsule\n                            </Typography>\n                            <form className={classes.forms} noValidate autoComplete=\"off\">\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12}>\n                                        <p>Your name?</p>\n                                        <TextField\n                                            required\n                                            id=\"title\"\n                                            name=\"title\"\n                                            label=\"requiried\"\n                                            value={name}\n                                            onChange={handleNameChange} \n                                            fullWidth\n                                            variant=\"outlined\" \n                                        />\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <p>Title: </p>\n                                        <TextField\n                                            required\n                                            id=\"title\"\n                                            name=\"title\"\n                                            label=\"requiried\"\n                                            value={title}\n                                            onChange={handleTitleChange} \n                                            fullWidth\n                                            variant=\"outlined\" \n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <input\n                                            className={classes.input}\n                                            id=\"contained-button-file\"\n                                            multiple\n                                            type=\"file\"\n                                        />\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button variant=\"outlined\" color=\"primary\" component=\"span\">\n                                                Click here to upload files\n                                            </Button>\n                                        </label>\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            multiline\n                                            rows={5}\n                                            id=\"txtmsg\"\n                                            name=\"Input txt\"\n                                            label=\"Write your text here!\"\n                                            fullWidth\n                                            defaultValue=\"I'm writing to you, from the past.\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <Button \n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        endIcon={<KeyboardArrowRightIcon /> } \n                                        color=\"secondary\">\n                                           Submit \n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid key={1} item>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3} alignItems=\"flex-end\">\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Email for notification: </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <TextField id=\"email\" />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Opening Time:  </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <form className={classes.container} noValidate>\n                                        <TextField\n                                            name=\"opentime\"\n                                            type=\"datetime-local\"\n                                            defaultValue=\"2021-05-24T10:30\"//can set it to current time?\n                                            className={classes.textField}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                    </form>\n                                </Grid>\n                                <Grid item>\n                                    <ToggleButtonGroup\n                                        value={publicstatus}\n                                        exclusive\n                                        onChange={handleToggle}\n                                        aria-label=\"text alignment\"\n                                    >\n                                        <ToggleButton value={true}>Public</ToggleButton>\n                                        <ToggleButton value={false}>Private</ToggleButton>\n                                    </ToggleButtonGroup>\n                                    <Grid item>\n                                        {\n                                            publicstatus ?\n                                                <Grid item>\n                                                    <CreatePublic></CreatePublic>\n                                                </Grid>\n                                                :\n                                                <Grid item>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"discard\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Discard After Read: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"selfset\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Self-Set Key: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <input type=\"text\" name=\"selfsetkey\" variant=\"outlined\" />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"isnotyetmsg\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Not yet message: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <TextField\n                                                            multiline\n                                                            fullWidth\n                                                            rows={5}\n                                                            name=\"notyetmsg\"\n                                                            defaultValue=\"Not yet. Come back later!\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n        </Grid>\n        \n    );\n\n  }\n}\n  \n  \n  export default CreateCapsule;"]},"metadata":{},"sourceType":"module"}