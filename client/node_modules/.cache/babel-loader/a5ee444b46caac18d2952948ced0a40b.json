{"ast":null,"code":"var _jsxFileName = \"/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js\",\n    _s = $RefreshSig$();\n\n//feature yet to be implement:\n//1. disable submit button when title is not filled.\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Checkout from './Checkout';\nimport AddressForm from './AddressForm';\nimport { Toolbar } from '@material-ui/core'; //text fill\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; //toggle button\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport { breakpoints } from '@material-ui/system'; //public or private\n\nimport CreatePublic from './CreatePublic'; //switch \n\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 660,\n    width: 500\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  },\n  forms: {\n    display: 'centre',\n    alignItems: 'centre',\n    justifyContent: 'centre'\n  }\n}));\n\nfunction CreateCapsule() {\n  _s();\n\n  const [myValue, setValue] = useState('');\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles(); //toggle button\n\n  const [publicstatus, setPublic] = React.useState(true);\n\n  const handleToggle = () => {\n    setPublic(!publicstatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: spacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Create Your Time Capsule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.forms,\n              noValidate: true,\n              autoComplete: \"off\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Your name?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ÃŽ: true,\n                    name: \"sender\",\n                    autoComplete: \"given-name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Title: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    id: \"title\",\n                    name: \"title\",\n                    label: \"requiried\",\n                    value: myValue,\n                    onChange: e => setValue(e.target.value),\n                    fullWidth: true,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: classes.input,\n                    id: \"contained-button-file\",\n                    multiple: true,\n                    type: \"file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"contained-button-file\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      component: \"span\",\n                      children: \"Click here to upload files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    multiline: true,\n                    rows: 5,\n                    id: \"txtmsg\",\n                    name: \"Input txt\",\n                    label: \"Write your text here!\",\n                    fullWidth: true,\n                    defaultValue: \"I'm writing to you, from the past.\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              alignItems: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Email for notification: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Opening Time:  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: classes.container,\n                  noValidate: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"opentime\",\n                    type: \"datetime-local\",\n                    defaultValue: \"2021-05-24T10:30\" //can set it to current time?\n                    ,\n                    className: classes.textField,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  value: publicstatus,\n                  exclusive: true,\n                  onChange: handleToggle,\n                  \"aria-label\": \"text alignment\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: true,\n                    children: \"Public\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: false,\n                    children: \"Private\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: publicstatus ? /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(CreatePublic, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"discard\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Discard After Read: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"selfset\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Self-Set Key: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"selfsetkey\",\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"isnotyetmsg\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Not yet message: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        fullWidth: true,\n                        rows: 5,\n                        name: \"notyetmsg\",\n                        defaultValue: \"Not yet. Come back later!\",\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateCapsule, \"TaYTvLUHHPTq7d9o2wP9n0SqVHU=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateCapsule;\nexport default CreateCapsule;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCapsule\");","map":{"version":3,"sources":["/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js"],"names":["React","useState","makeStyles","Grid","Paper","Checkout","AddressForm","Toolbar","TextField","Button","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","ToggleButton","ToggleButtonGroup","CssBaseline","Typography","breakpoints","CreatePublic","Switch","FormGroup","FormControlLabel","FormControl","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","input","display","forms","alignItems","justifyContent","CreateCapsule","myValue","setValue","setSpacing","classes","publicstatus","setPublic","handleToggle","e","target","value","container","textField","shrink"],"mappings":"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","sourcesContent":["//feature yet to be implement:\n//1. disable submit button when title is not filled.\n\nimport React, { useState} from 'react' ;\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Checkout from './Checkout';\nimport AddressForm from './AddressForm';\nimport { Toolbar } from '@material-ui/core';\n\n//text fill\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n//toggle button\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport { breakpoints } from '@material-ui/system';\n\n//public or private\nimport CreatePublic from './CreatePublic';\n\n//switch \nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 660,\n        width: 500,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    input: {\n        display: 'none',\n    },\n    forms: {\n        display: 'centre',\n        alignItems: 'centre',\n        justifyContent: 'centre',\n\n    }\n}));\n\n\nfunction CreateCapsule() {\n    const [myValue, setValue] = useState('') \n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    //toggle button\n    const [publicstatus, setPublic] = React.useState(true);\n\n    const handleToggle = () => {\n        setPublic(!publicstatus);\n    };\n\n\n    return (\n        <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={spacing}>\n                    <Grid key={0} item>\n                        <Paper className={classes.paper}>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Create Your Time Capsule\n                            </Typography>\n                            <form className={classes.forms} noValidate autoComplete=\"off\">\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12}>\n                                        <p>Your name?</p>\n                                        <input\n                                            type=\"text\" ÃŽ\n                                            name=\"sender\"\n                                            autoComplete=\"given-name\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <p>Title: </p>\n                                        <TextField\n                                            required\n                                            id=\"title\"\n                                            name=\"title\"\n                                            label=\"requiried\"\n                                            value={myValue}\n                                            onChange={(e) => setValue(e.target.value)} \n                                            fullWidth\n                                            variant=\"outlined\" \n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <input\n                                            className={classes.input}\n                                            id=\"contained-button-file\"\n                                            multiple\n                                            type=\"file\"\n                                        />\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button variant=\"outlined\" color=\"primary\" component=\"span\">\n                                                Click here to upload files\n                                            </Button>\n                                        </label>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            multiline\n                                            rows={5}\n                                            id=\"txtmsg\"\n                                            name=\"Input txt\"\n                                            label=\"Write your text here!\"\n                                            fullWidth\n                                            defaultValue=\"I'm writing to you, from the past.\"\n                                            variant=\"outlined\"\n\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button variant=\"contained\" color=\"primary\">Submit</Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid key={1} item>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3} alignItems=\"flex-end\">\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Email for notification: </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <TextField id=\"email\" />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Opening Time:  </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <form className={classes.container} noValidate>\n                                        <TextField\n                                            name=\"opentime\"\n                                            type=\"datetime-local\"\n                                            defaultValue=\"2021-05-24T10:30\"//can set it to current time?\n                                            className={classes.textField}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                    </form>\n                                </Grid>\n                                <Grid item>\n                                    <ToggleButtonGroup\n                                        value={publicstatus}\n                                        exclusive\n                                        onChange={handleToggle}\n                                        aria-label=\"text alignment\"\n                                    >\n                                        <ToggleButton value={true}>Public</ToggleButton>\n                                        <ToggleButton value={false}>Private</ToggleButton>\n                                    </ToggleButtonGroup>\n                                    <Grid item>\n                                        {\n                                            publicstatus ?\n                                                <Grid item>\n                                                    <CreatePublic></CreatePublic>\n                                                </Grid>\n                                                :\n                                                <Grid item>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"discard\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Discard After Read: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"selfset\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Self-Set Key: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <input type=\"text\" name=\"selfsetkey\" variant=\"outlined\" />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"isnotyetmsg\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Not yet message: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <TextField\n                                                            multiline\n                                                            fullWidth\n                                                            rows={5}\n                                                            name=\"notyetmsg\"\n                                                            defaultValue=\"Not yet. Come back later!\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n        </Grid>\n\n    );\n\n }\n\nexport default CreateCapsule;"]},"metadata":{},"sourceType":"module"}