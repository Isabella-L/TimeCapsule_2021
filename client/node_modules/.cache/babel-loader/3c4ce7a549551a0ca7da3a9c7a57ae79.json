{"ast":null,"code":"var _jsxFileName = \"/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js\",\n    _s = $RefreshSig$();\n\n//feature yet to be implement:\n//1. disable submit button when title is not filled.\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //import Checkout from './Checkout';\n//import AddressForm from './AddressForm';\n//import { Toolbar } from '@material-ui/core';\n//text fill\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'; //toggle button\n//import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n//import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n//import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n//import FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core'; //import { breakpoints } from '@material-ui/system';\n//public or private\n\nimport CreatePublic from './CreatePublic'; //switch\n\nimport Switch from '@material-ui/core/Switch'; //import FormGroup from '@material-ui/core/FormGroup';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import FormControl from '@material-ui/core/FormControl';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 660,\n    width: 500\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  },\n  forms: {\n    display: 'centre',\n    alignItems: 'centre',\n    justifyContent: 'centre'\n  }\n}));\n\nfunction CreateCapsule() {\n  _s();\n\n  /*\n  useEffect(() => {\n      axios.post(\"http://localhost:8080/api\").then((response) => {\n          console.log(response.data);\n      });\n  }, []);\n  */\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles(); //toggle button\n\n  const [publicstatus, setPublic] = React.useState(true);\n\n  const handleToggle = () => {\n    setPublic(!publicstatus);\n  }; //-----------------------------------------------------------------\n\n\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const submit = event => {\n    //event.preventDefault();\n    const payload = {\n      title: this.state.title,\n      body: this.state.body\n    };\n    axios({\n      url: 'http://localhost:8080/api/save',\n      method: 'POST',\n      data: payload\n    }).then(() => {\n      console.log('Data has been sent to the server');\n      this.resetUserInputs();\n      this.getBlogPost();\n    }).catch(() => {\n      console.log('Internal server error');\n    });\n    ;\n  };\n\n  const handleNameChange = e => {\n    console.log(`Typed => ${e.target.value}`);\n    setName(e.target.value);\n  };\n\n  const handleTitleChange = e => {\n    console.log(`Typed => ${e.target.value}`);\n    setTitle(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        spacing: spacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Create Your Time Capsule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.forms,\n              noValidate: true,\n              autoComplete: \"off\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Your name?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    required: true,\n                    id: \"title\",\n                    name: \"title\",\n                    label: \"requiried\",\n                    value: name,\n                    onChange: handleNameChange,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Title: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    required: true,\n                    id: \"title\",\n                    name: \"title\",\n                    label: \"requiried\",\n                    value: title,\n                    onChange: handleTitleChange,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: classes.input,\n                    id: \"contained-button-file\",\n                    multiple: true,\n                    type: \"file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"contained-button-file\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      component: \"span\",\n                      children: \"Click here to upload files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    multiline: true,\n                    rows: 5,\n                    id: \"txtmsg\",\n                    name: \"Input txt\",\n                    label: \"Write your text here!\",\n                    fullWidth: true,\n                    defaultValue: \"I'm writing to you, from the past.\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 54\n                    }, this),\n                    color: \"secondary\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              alignItems: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Email for notification: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Opening Time:  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: classes.container,\n                  noValidate: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"opentime\",\n                    type: \"datetime-local\",\n                    defaultValue: \"2021-05-24T10:30\" //can set it to current time?\n                    ,\n                    className: classes.textField,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  value: publicstatus,\n                  exclusive: true,\n                  onChange: handleToggle,\n                  \"aria-label\": \"text alignment\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: true,\n                    children: \"Public\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: false,\n                    children: \"Private\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: publicstatus ? /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(CreatePublic, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"discard\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Discard After Read: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"selfset\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Self-Set Key: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"selfsetkey\",\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"isnotyetmsg\",\n                        control: /*#__PURE__*/_jsxDEV(Switch, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 70\n                        }, this),\n                        label: \"Not yet message: \",\n                        labelPlacement: \"start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        fullWidth: true,\n                        rows: 5,\n                        name: \"notyetmsg\",\n                        defaultValue: \"Not yet. Come back later!\",\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateCapsule, \"zQvO2YOTojHPxuiORI4zEFvPo+s=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateCapsule;\nexport default CreateCapsule;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCapsule\");","map":{"version":3,"sources":["/Users/lelerer/my-app/client/src/components/CreateCapsuleColumn.js"],"names":["useEffect","React","useState","axios","makeStyles","Grid","Paper","TextField","Button","KeyboardArrowRightIcon","ToggleButton","ToggleButtonGroup","CssBaseline","Typography","CreatePublic","Switch","FormControlLabel","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","input","display","forms","alignItems","justifyContent","CreateCapsule","setSpacing","classes","publicstatus","setPublic","handleToggle","name","setName","title","setTitle","submit","event","payload","state","body","url","method","data","then","console","log","resetUserInputs","getBlogPost","catch","handleNameChange","e","target","value","handleTitleChange","container","textField","shrink"],"mappings":"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","sourcesContent":["//feature yet to be implement:\n//1. disable submit button when title is not filled.\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n//import Checkout from './Checkout';\n//import AddressForm from './AddressForm';\n//import { Toolbar } from '@material-ui/core';\n\n//text fill\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\n//toggle button\n//import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n//import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n//import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n//import FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { CssBaseline, Typography } from '@material-ui/core';\n//import { breakpoints } from '@material-ui/system';\n\n//public or private\nimport CreatePublic from './CreatePublic';\n\n//switch\nimport Switch from '@material-ui/core/Switch';\n//import FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n//import FormControl from '@material-ui/core/FormControl';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 660,\n        width: 500,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    input: {\n        display: 'none',\n    },\n    forms: {\n        display: 'centre',\n        alignItems: 'centre',\n        justifyContent: 'centre',\n\n    }\n}));\n\n\nfunction CreateCapsule() {\n    /*\n    useEffect(() => {\n        axios.post(\"http://localhost:8080/api\").then((response) => {\n            console.log(response.data);\n        });\n    }, []);\n    */\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    //toggle button\n    const [publicstatus, setPublic] = React.useState(true);\n\n    const handleToggle = () => {\n        setPublic(!publicstatus);\n    };\n    //-----------------------------------------------------------------\n    const [name, setName] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n\n    const submit = (event) => {\n        //event.preventDefault();\n\n        const payload = {\n            title: this.state.title,\n            body: this.state.body\n        };\n        \n            axios({\n              url: 'http://localhost:8080/api/save',\n              method: 'POST',\n              data: payload\n            })\n              .then(() => {\n                console.log('Data has been sent to the server');\n                this.resetUserInputs();\n                this.getBlogPost();\n              })\n              .catch(() => {\n                console.log('Internal server error');\n              });;\n              \n    };\n\n\n    const handleNameChange = e => {\n        console.log(`Typed => ${e.target.value}`);\n        setName(e.target.value);\n    };\n\n    const handleTitleChange = e => {\n        console.log(`Typed => ${e.target.value}`);\n        setTitle(e.target.value);\n    };\n\n\n    return (\n        <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justifyContent=\"center\" spacing={spacing}>\n                    <Grid key={0} item>\n                        <Paper className={classes.paper}>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Create Your Time Capsule\n                            </Typography>\n                            <form className={classes.forms} noValidate autoComplete=\"off\">\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12}>\n                                        <p>Your name?</p>\n                                        <input\n                                            required\n                                            id=\"title\"\n                                            name=\"title\"\n                                            label=\"requiried\"\n                                            value={name}\n                                            onChange={handleNameChange}\n                                            variant=\"outlined\"\n                                        />\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <p>Title: </p>\n                                        <input\n                                            required\n                                            id=\"title\"\n                                            name=\"title\"\n                                            label=\"requiried\"\n                                            value={title}\n                                            onChange={handleTitleChange}\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <input\n                                            className={classes.input}\n                                            id=\"contained-button-file\"\n                                            multiple\n                                            type=\"file\"\n                                        />\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button variant=\"outlined\" color=\"primary\" component=\"span\">\n                                                Click here to upload files\n                                            </Button>\n                                        </label>\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            multiline\n                                            rows={5}\n                                            id=\"txtmsg\"\n                                            name=\"Input txt\"\n                                            label=\"Write your text here!\"\n                                            fullWidth\n                                            defaultValue=\"I'm writing to you, from the past.\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            endIcon={<KeyboardArrowRightIcon />}\n                                            color=\"secondary\">\n                                            Submit\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid key={1} item>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3} alignItems=\"flex-end\">\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Email for notification: </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <TextField id=\"email\" />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6' gutterBottom>Opening Time:  </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <form className={classes.container} noValidate>\n                                        <TextField\n                                            name=\"opentime\"\n                                            type=\"datetime-local\"\n                                            defaultValue=\"2021-05-24T10:30\"//can set it to current time?\n                                            className={classes.textField}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                    </form>\n                                </Grid>\n                                <Grid item>\n                                    <ToggleButtonGroup\n                                        value={publicstatus}\n                                        exclusive\n                                        onChange={handleToggle}\n                                        aria-label=\"text alignment\"\n                                    >\n                                        <ToggleButton value={true}>Public</ToggleButton>\n                                        <ToggleButton value={false}>Private</ToggleButton>\n                                    </ToggleButtonGroup>\n                                    <Grid item>\n                                        {\n                                            publicstatus ?\n                                                <Grid item>\n                                                    <CreatePublic></CreatePublic>\n                                                </Grid>\n                                                :\n                                                <Grid item>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"discard\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Discard After Read: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"selfset\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Self-Set Key: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <input type=\"text\" name=\"selfsetkey\" variant=\"outlined\" />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            value=\"isnotyetmsg\"\n                                                            control={<Switch color=\"primary\" />}\n                                                            label=\"Not yet message: \"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <TextField\n                                                            multiline\n                                                            fullWidth\n                                                            rows={5}\n                                                            name=\"notyetmsg\"\n                                                            defaultValue=\"Not yet. Come back later!\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n        </Grid>\n\n    );\n\n}\n\nexport default CreateCapsule;\n\n"]},"metadata":{},"sourceType":"module"}